{
  "env": {
    "PROJECT_TYPE": "tauri-app",
    "MAIN_LANGUAGE": "typescript",
    "FRAMEWORK": "react"
  },
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(npx create-tauri-app:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(# Create a simple 1x1 PNG as placeholder\nprintf '\\x89PNG\\r\\n\\x1a\\n\\x00\\x00\\x00\\rIHDR\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\x08\\x02\\x00\\x00\\x00\\x90wS\\xde\\x00\\x00\\x00\\x0cIDATx\\x9cc\\xf8\\x0f\\x00\\x00\\x01\\x01\\x00\\x05|%\\xb4b\\x00\\x00\\x00\\x00IEND\\xaeB`\\x82' > src-tauri/icons/32x32.png\ncp src-tauri/icons/32x32.png src-tauri/icons/128x128.png\ncp src-tauri/icons/32x32.png src-tauri/icons/128x128@2x.png\ncp src-tauri/icons/32x32.png src-tauri/icons/icon.ico)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(cp:*)",
      "Bash(cargo check:*)",
      "Bash(pnpm run type-check:*)",
      "Bash(pnpm run:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run tauri:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(cargo add:*)",
      "Bash(pnpm add:*)",
      "Bash(npm install:*)",
      "Bash(cargo build:*)",
      "Bash(cargo run:*)",
      "Bash(pnpm run dev:*)",
      "Bash(pnpm run build:*)",
      "Bash(jq:*)",
      "Bash(cat:*)",
      "Bash(echo:*)",
      "Bash(kill:*)",
      "Bash(pnpm add:*)",
      "Bash(cargo:*)",
      "Bash(rg:*)",
      "Bash(mv:*)",
      "Bash(pkill:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)",
      "Bash(git checkout:*)",
      "Bash(git fetch:*)",
      "Bash(git merge-base:*)",
      "Bash(pnpm tauri:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(pnpm tsc:*)",
      "Bash(git commit:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr:*)",
      "Bash(git merge:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(npm run check:*)",
      "Bash(npm run:*)",
      "Bash(screencapture:*)",
      "Bash(osascript:*)",
      "Bash(rm:*)",
      "Bash(chmod:*)",
      "Bash(open http://localhost:1421/?split=true)",
      "Bash(open \"http://localhost:1421/?split=true\")",
      "Bash(pnpm approve-builds:*)",
      "mcp__puppeteer__puppeteer_screenshot",
      "mcp__puppeteer__puppeteer_navigate",
      "mcp__puppeteer__puppeteer_evaluate",
      "Bash(curl:*)",
      "Bash(python3:*)",
      "Bash(gh:*)",
      "WebFetch(domain:github.com)",
      "Bash(sips:*)",
      "Bash(iconutil:*)",
      "Bash(# Create icon_16x16.png\nsips -z 16 16 source-1024.png --out AppIcon.iconset/icon_16x16.png\n\n# Create icon_16x16@2x.png (32x32)\nsips -z 32 32 source-1024.png --out AppIcon.iconset/icon_16x16@2x.png\n\n# Create icon_32x32.png\nsips -z 32 32 source-1024.png --out AppIcon.iconset/icon_32x32.png\n\n# Create icon_32x32@2x.png (64x64)\nsips -z 64 64 source-1024.png --out AppIcon.iconset/icon_32x32@2x.png\n\n# Create icon_128x128.png\nsips -z 128 128 source-1024.png --out AppIcon.iconset/icon_128x128.png\n\n# Create icon_128x128@2x.png (256x256)\nsips -z 256 256 source-1024.png --out AppIcon.iconset/icon_128x128@2x.png\n\n# Create icon_256x256.png\nsips -z 256 256 source-1024.png --out AppIcon.iconset/icon_256x256.png\n\n# Create icon_256x256@2x.png (512x512)\nsips -z 512 512 source-1024.png --out AppIcon.iconset/icon_256x256@2x.png\n\n# Create icon_512x512.png\nsips -z 512 512 source-1024.png --out AppIcon.iconset/icon_512x512.png\n\n# Create icon_512x512@2x.png (1024x1024)\nsips -z 1024 1024 source-1024.png --out AppIcon.iconset/icon_512x512@2x.png)",
      "Bash(pnpm build:*)",
      "Bash(xcodebuild:*)",
      "Bash(xcrun simctl list:*)",
      "Bash(open:*)",
      "Bash(./create_watch_app.sh:*)",
      "Bash(xcodegen generate:*)",
      "Bash(git rm:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}